# $Id$
# Main make rules for KineIRCd sources

srcdir=@srcdir@
VPATH=@srcdir@
top_builddir=$(srcdir)/../..

include $(top_builddir)/make/defs

# Do not change these unless you really know what you are doing. In fact
# don't even change them if you do know what you're doing.
LIB_VERSION=@LIB_VERSION@
LIB_REVISION=@LIB_REVISION@
LIB_AGE=@LIB_AGE@

INCDIRS=@INCDIRS@ -I$(top_builddir)/include -I$(srcdir)
DEFS=@DEFS@

SSL_LIB=@ssl_lib@
SSL_LDFLAGS=@ssl_ldflags@

# Targets we will build (should have rules for each else this will break)
#TARGET=libkineircd.@OBJEXT@
TARGET=libkineircd.$(LIBTOOL_LIB_EXT)

# Sub-directories
SUB_DIRS=\
	config \
	listener \
	logger \
	modules \
	socket

# This should be automatic.. I forgot how to do that tho.. I'll fix it soon!!
ROBJECTS=config/config.lo listener/listener.lo logger/logger.lo modules/modules.lo socket/socket.lo

VER_MAJOR=@VERSION_MAJOR@
VER_MINOR=@VERSION_MINOR@
VER_EXTRA=@VERSION_EXTRA@
VER_SRC=version.cpp
#VER_OBJ=version.@OBJEXT@
VER_OBJ=version.$(LIBTOOL_OBJ_EXT)
VER_FLG=-DBUILD_STRING="\"`date -u +%04Y%02m%02d%02H%02M%02S`\"" \
	-DVERSION_MAJOR="@VERSION_MAJOR@" \
	-DVERSION_MINOR="@VERSION_MINOR@" \
	-DVERSION_EXTRA="\"@VERSION_EXTRA@\"" \
	-DVERSION_NAME="\"@VERSION_NAME@\"" \
	-DVERSION_NAME_FULL="\"@VERSION_NAME_FULL@\"" \
	-DVERSION_BUGREPORT="\"@VERSION_BUGREPORT@\"" \
	-DVERSION_STRING="\"@VERSION_STRING@\"" \
	-DLIB_VERSION="$(LIB_VERSION)" \
	-DLIB_REVISION="$(LIB_REVISION)" \
	-DLIB_AGE="$(LIB_AGE)"

# libkineircd library sources that are required
SOURCES=\
	daemon.cpp \
	sha1.cpp \
	signals.cpp \
	str.cpp \
	utils.cpp

SOURCES_NOT_YET=\
	channel.cpp \
	connection.cpp \
	langtags.cpp \
	language.cpp \
	register.cpp \
	server.cpp \
	user.cpp
	

# Are we debugging?
ifeq (@kineircd_test_debugging@,yes)
SOURCES+=debug.cpp
endif

#OBJECTS=$(SOURCES:.cpp=.@OBJEXT@)
OBJECTS=$(SOURCES:.cpp=.$(LIBTOOL_OBJ_EXT))
LIBS+=$(SSL_LIB) -ldl # libdl included temporarily, I think..
LDFLAGS+=$(SSL_LDFLAGS)

LANGTAGS_IN_DEF=langtags.def
LANGTAGS_IN_TPL=langtags.tpl
LANGTAGS_OUT_CPP=langtags.cpp
LANGTAGS_OUT_H=langtags.h

########################################################################

include $(top_builddir)/make/rules
include $(srcdir)/Makefile.deps

.PHONY: _top_ subdirs $(SUB_DIRS) install distclean


_top_: $(TARGET)


subdirs: $(SUB_DIRS)


$(SUB_DIRS):
	$(MAKE) -C $@


$(TARGET): subdirs $(OBJECTS) $(ROBJECTS)
#	$(LD) -r $(LDFLAGS) $(LIBS) -o $@ $(VER_OBJ) $(OBJECTS) $(ROBJECTS)
	$(LIBTOOL) --mode=compile $(CXX) -prefer-pic \
		   $(CXXFLAGS) $(VER_FLG) $(DEFS) $(INCDIRS) \
		   -c $(VER_SRC) -o $(VER_OBJ)
	$(LIBTOOL) --mode=link $(CXX) -rpath $(libdir) \
		-version-info $(LIB_VERSION):$(LIB_REVISION):$(LIB_AGE) \
		$(LDFLAGS) $(LIBS) -o $@ \
		$(VER_OBJ) $(OBJECTS) $(ROBJECTS)


# We need to make langtags.h and langtags.cpp via GNU AutoGen...
$(LANGTAGS_OUT_CPP): $(LANGTAGS_IN_DEF) $(LANGTAGS_IN_TPL)
	autogen $(LANGTAGS_IN_DEF)


install:
	@echo "Install needs to be done..."


distclean: clean
	$(RM) $(LANGTAGS_OUT_CPP) $(LANGTAGS_OUT_H) \
		`$(FIND) . \( \
			-name core \
			-name Makefile -o \
				\) -type f`


