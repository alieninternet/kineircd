/* localuser.h
 * LocalUser class
 */

#ifndef __LOCALUSER_H_
# define __LOCALUSER_H_

# ifdef STL_HAS_HASH
#  include <hash_set>
# else
#  include <set.h>
# endif

class LocalUser;

# include "user.h"
# include "handler.h"
# include "str.h"


// Locally connected user class
class LocalUser {
 public:
# ifdef STL_HAS_HASH
   typedef hash_set <String> watch_set_t;
# else
   typedef set <String> watch_set_t;
# endif

 public:
   User *user;					// Link into main user class
   Handler *handler;				// Link into user handler

   snotice_bitmask_t serverNotices;		// Server notices to receive
   
   watch_set_t watches;				// Watching these nicknames
 
 public:
   // Constructor
   LocalUser(User *u, Handler *h)
     : user(u),
       handler(h),
       serverNotices(0)
     {
	watches.clear();
     };
   
   // Destructor
   ~LocalUser(void)
     {
	watches.clear();
     };

   // Add to the watch list
   void addWatch(const String &target)
     {
	watches.insert(target);
     };
   
   // Remote from the watch list
   void delWatch(const String &target)
     {
	watches.erase(target);
     };
   
   // Wipe the watches list
   void wipeWatches(void)
     {
	watches.clear();
     };
   
   // Check for a watched nick
   bool watching(String const &target)
     {
	return ((watches.find(target) != watches.end()) ? true : false);
     };
};

#endif

