/* $Id$
 * Operator class
 * 
 * Copyright (c) 2001,2002 KineIRCd Development Team
 * (See DEV-TEAM file for details)
 *
 * This file is a part of KineIRCd.
 * 
 * KineIRCd is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * KineIRCd is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with KineIRCd; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef _INCLUDE_KINEIRCD_OPERATOR_H_
# define _INCLUDE_KINEIRCD_OPERATOR_H_ 1

# include <aisutil/string/string.h>

# include "kineircd/password.h"

/* Note that the nickname of the operator is stored as the key of the map
 * that uses this structure
 */

namespace Kine {
   class Operator : public Password {
    private:
      const AISutil::String name;		// Name of this operator
      const bool global;			// Global?
      
    public:
      // Constructor   
      Operator(const AISutil::String& n, const Utils::SHA1::digest_type& p,
	       const bool g)
	: Password(p),
          name(n),
          global(g)
	{};
      
      // Return the operator name (description)
      const AISutil::String& getName(void) const {
	 return name;
      };
      
      // Return whether or not this operator is global
      bool isGlobal(void) const {
	 return global;
      };
   };
};
   
#endif // _INCLUDE_KINEIRCD_OPERATOR_H_
   
