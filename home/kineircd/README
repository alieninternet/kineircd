
              ----------------------------------------------------
                Kine IRC Server Daemon Installation Instructions
              ----------------------------------------------------


    Warning! This server is DEVELOPMENT software, that means this software
    is most likely not of the quality you may want it to be. You may run
    this software AT YOUR OWN RISK.

    Quick warning for GCC users: Run "gcc --version", if you get version 2.96,
    change your compiler to either 2.95.3 or 3.0. Version 2.96 is not an 
    official GCC.



 1. What is KineIRCd? What does it do? What's so special about it?
    -------------------------------------------------------------
    
    KineIRCd is an IRC (Internet Relay Chat) Daemon used to link thousands of
    people so they can chat to each other.
    
    Unlike other IRC daemons, KineIRCd is NOT based on the original IRC daemon
    written over a decade ago. It has been rewritten from scratch with
    considerable planning in the hope that many of the scalability issues
    the original IRC daemons suffered from can be avoided, as well as allowing
    as much future-proofing as possible.
    
    KineIRCd also has the ability to save people "reinventing the wheel". Many
    networks run servers which serve special purposes, such as channel and
    nickname retention services, and open-proxy testers. In the event that a
    new server-to-server protocol becomes available, the developer would have
    to rewrite that protocol again. The developer could simply migrate his/her
    software to become a "service module" for KineIRCd, and never have to 
    worry about the protocols again, or the internal workings of an IRC
    server.
    
    KineIRCd also allows for "protocol modules". If a new protocol is written
    (a user, server or service protocol), or an existing protocol is updated,
    the server administrator can simply load the new module without having to
    restart the IRC server. This avoids unnecessary disconnections and gives
    a much more professional look to your service.

    KineIRCd has a goal to remain portable (taking advantage of some special
    features some systems have), however at this stage a win32 version is not
    planned.



 1. Package requirements
    --------------------
    
    The following requirements need to be forfilled for this package to work
    correctly:

     - C++ Compiler with Standard Template Library (STL)
      
       You will need a current C++ compiler with a comliant Standard Template
       Library. All C++ compilers come with a compliant STL these days,
       however some are more efficient than others. Silicon Graphics (SGI)
       have a version of the STL which includes capabilities KineIRCd will
       take advantage of which will dramatically enhance the performance
       of the daemon, most noticeably in medium to heavy load.
       
       Note that the GCC compiler suite comes with the SGI STL, but replaces
       the string handling functions with a more efficient version. GCC users
       are advised not to change their installation!
       
       The SGI STL can be found at http://www.sgi.com/tech/stl/download.html


     - System support for shared objects/libraries (optional):
      
       If you wish to compile KineIRCd with module support, you will need
       support on your system for shared libraries. Many systems support
       this these days, so this shouldn't be an issue.


     - DNS host resolver library (libresolv):
     
       Foo.


     - BIND Lightweight Resolver Library (lwresolv):
     
       The lightweight resolver library resolves many issues with the
       traditional resolver library (no pun intended) by setting up a
       small cache only server and a puny cut-down DNS protocol designed
       specifically for the task of acting as a resolver for software which
       performs quite a large number of DNS requests (and needs them to be
       quickly resolved), just like an IRC server.
       
       If you have a heavily loaded IRC server and might be finding in
       peak times some clients are not being resolved (because the server
       may be too busy), this is the answer for you.
       
       The lightweight resolver comes with ISC's BIND DNS server, and can be 
       set up inside named itself or using the standalone "lwresd" daemon.
       
       BIND can be found at http://www.isc.org/products/BIND/


     - OpenSSL (optional):

       If you wish to use SSL for connections between servers, users or
       services, then you will need OpenSSL. KineIRCd also takes advantage 
       of the OpenSSL library by using some of its functions (which in many
       cases can be quite superiour in speed) even if you do not compile
       SSL support into the daemon.
       
       SSL support on IRC networks is rapidly becoming a sought after
       feature.
       
       OpenSSL can be found at http://www.openssl.org/

     
     - NET-SNMP (optional): 
     
       If you wish to add SNMP capability to the daemon (eg. for 
       statistical analysis) then you will need to install the NET-SNMP
       package. The daemon can be set up to work as an agent on its own, or 
       combine with another agent using the AgentX protocol (such as the
       agent that comes in the NET-SNMP package).
       
       Note that KineIRCd's SNMP development is currently stagnant due to
       stability problems within the NET-SNMP AgentX code.
       
       NET-SNMP can be found at http://net-snmp.sourceforge.net/
       
       
 2. Configuration of the package
    ----------------------------
    
    The configuration of the server's compilation time settings can be
    important performance wise

    <snip>
    
    
    
 3. Building the package
    --------------------
    
 4. Installation
    ------------
    
 5. Configuration of the server
    ---------------------------
       
