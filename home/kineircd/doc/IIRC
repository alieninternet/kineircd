These are dirty notes for implementing IIRC, the inter-irc network stuff.

 * Accepted via the link are numerics from servers, PRIVMSG, NOTICE, and WHOIS
   commands. Also JOIN, PART and QUIT for servers using IIRC channels. Also
   IIRCCL to request a channel list from the remote server (also indicated
   support for that option - both servers should switch to that after someone
   requests it). Also EOB is also accepted
 
 * *NO* bursts, connections are totally stateless unless the optional IIRC
   channels are used.. ('~' prefixed channels).
   
 * Network names, not domains, are used to identify remote nicknames. Since
   the same nickname can exist on multiple networks, all remote nicknames
   have the "#<network name>" suffix. 

    Eg. "nick#networkA" and "nick#networkB" are different, and if you are
    on networkC then "nick#networkC" and "nick" are the same thing.
    
 * Local users should not have the #<network name> suffix, but it should still
   be accepted by both servers and clients.
   
 * IIRC ('~' prefixed) channels will operate similar to # channels, except
   no anonymous mode ('+a') should be allowed.
   
 * SILENCE and ACCEPT commands on the server *must* be able to block from
   remote networks..
   
 * No length limits on IIRC links, unless servers need to limit privmsgs.

    
Example conversation: 'foo' is on networkA, 'bah' is on networkB

from foo's perspective:
  < PRIVMSG bah#networkB :Hello there, how are you?
  > bah#networkB!baz@somehost.com PRIVMSG foo :Hello! I'm good thanks.
  
from bah's perspective:
  > foo#networkA!fooey@anotherhost.com PRIVMSG bah :Hello there, how are you?
  < PRIVMSG foo#networkA :Hello! I'm good thanks.
  
This should integrate nicely with existing clients. In such time as the
trailing user@host can be removed (via CAPAB) that can also be dropped..


Example channel join: 'foo' and 'bah' are the same people

from foo's perspective (joining):
  < JOIN ~qux
  > foo!fooey@anotherhost.com JOIN :~qux
  > :server.networkA 332 foo ~qux :This is a topic
  > :server.networkA 333 foo ~qux bah#networkB 1023180774
  > :server.networkA 353 foo = ~qux :foo @bah#networkB +bazza#networkB
  > :server.networkA 366 foo ~qux :End of NAMES list
  < PRIVMSG ~qux :Hello everyone!
  > bah#networkB!baz@somehost.com PRIVMSG ~qux :Hey foo!
  
from bah's perspective (already in the channel):
  < TOPIC ~qux :This is a topic
  > :server.networkB 332 bah ~qux :This is a topic
   (check the topic to prove a point - note the name of the person setting it)
  < TOPIC ~qux
  > :server.networkB 332 bah ~qux :This is a topic
  > :server.networkB 333 bah ~qux bah 1023180774
   (foo joins)
  > foo#networkA!fooey@anotherhost.com JOIN :~qux
  > foo#networkA!fooey@anotherhost.com PRIVMSG ~qux :Hello everyone!
  < PRIVMSG ~qux :Hey foo!


Connection commands:
  IIRCN (connect an iirc server to server link):
  IIRCN <network> <via network> <hostname> <protocol> <ts> :<description>
    'network' is the name of the network connecting
    'via network' is the network this network is connected via. If this is *
       then the hop count is presumed to be 1 (direct), such as would be used
       during registration. During a burst, the network listed here must have
       already been spoken for. This MUST be * during registration, or it is
       considered invalid.
    'hostname' is the server hostname associated with this link, and may be
       masked to only show the network's domain name, or nothing at all
    'protocol' is the name of the protocol being used. Currently the IRC2
       based protocol is called IIRC1
    'ts' is a long integer time stamp for the connection. It can be any
       number representing the time in seconds according to that specific
       server so the receiver of the message can determine a time offset for
       that server. The timestamp must be greater than 0.
    'description' is an optional description of the network, a url, or 
       whatever is necessary.

Example server connection:
   (connects)
  < PASS VerySecretWord
  < IIRCN networkA * server.netA.org IIRC1 1 :Network A !!
   (registration okay, dump our password string and who we know - networkB
    is also connected to networkC and networkD)
  > PASS ReplyingSecretWord
  > IIRCN networkB * blah.networkB.org IIRC1 1321 :Network B description!
  > IIRCN networkC networkB another.server.com IIRC1 8761486 :Network C's description
  > IIRCN networkD networkB *.networkC.org IIRC1 104872391 :Network D's description
  > IIRCN networkE networkC * IIRC1 48719 :Network D's description
  > EOB
   (we have nothing to send, our burst is over)
  < EOB



005 Numeric (RPL_ISUPPORT) addition:
------------------------------------

      IIRC

  This shows that the NETWORKS command is available (for listing and/or
 changing inter-network connections), and that the extension to the PRIVMSG
 and NOTICE commands of placing the '#<network>' suffix is available on this
 server.



New Numerics
------------

682 - RPL_NETWORKS
      <name> <through_name> <hops> :<info>
