
Added numerics
--------------

Format of this list:

### - DEFINE
      <parameters>
      Notes/Description
_______________________________________________________________________________

660 - RPL_TRACEROUTE	
      <target> <hop #> <address> <hostname> <ping min> <ping avg> <ping max>
      
      Terminated with 666.


661 - RPL_TRACEROUTE_START
      <target> <target FQDN> <target address> <max hops>
      
      This is for the /traceroute command, it is the start of a traceroute.
      Target is the given target to traceroute to, the target FQDN is the
      name found for that target, the target IP is the IP found for that
      target, the max hops is the maximum number of hops allowed before
      terminating the traceroute attempt.


662 - RPL_MODECHANGEWARN
      ['+' | '-']<mode char> :<Warning message>
      
      This is a replacement of ERR_VWORLDWARN, which can be used for a
      variety of things such as warning operators about turning off wallops
      etc.


663 - RPL_CHANREDIR
      <old channel> <new channel> :Note: You are being redirected
      
      This is used when a channel is being redirected by the server so that
      the client is aware that it is not 'out of sync' with the server. This
      is designed to be used mainly with 'official' channels on the network
      which may cause some confusion, eg "&IRCopers" and "+IRCopers" would be
      best all pointed towards the single "#IRCopers". This is just a warning
      that the user will not be joining the requested channel but the
      'redirected' channel instead.


664 - RPL_SERVMODEIS
      <server> <modes> <parameters>
      
      Reply to a /mode <servername> request with the mode setting of a
      particular server. This is essentially a copy of RPL_CHANNELMODEIS,
      except for servers so that clients do not get confused.


665 - RPL_OTHERUMODEIS
      <nickname> <modes>
      
      Extension to 'RPL_UMODEIS' except only operators/helpers can receive
      this this - To assist in helping users with problems and due to the
      increasing complexity in modes (+R for example) that clients do not
      understand yet (let alone new IRC users), helpers/operators are allowed
      to '/mode nickname' to receive the modes that user has set. They CANNOT
      change these modes. This relieves the burden from the WHO command which
      not only complicates things with strange characters, but also allows
      the general public to view some modes.


666 - RPL_ENDOF_GENERIC
      <command> <parameter(s)> :End of <command>
      
      Specifies the end of a bunch of numerics in a neat generic way to save 
      numerics.


670 - RPL_WHOWAS_DETAILS
      <nick> <type> :<information>
      
      This follows the normal RPL_WHOWASUSER and RPL_WHOWAS_TIME (ref: ircu).
      The nickname corresponds to the nickname of the returning
      information. The type is simply a number (8-bit, range of 0..255) 
      which denotes what type of information is being returned, or rather 
      what 'happened' to this user. Currently the following information
      types have been defined:
        0 - Quit, the user signed off (information = quit message)
	1 - Connection break, something went wrong (information = error)
	2 - Netsplit occured, two servers are given, but may be masked
            depending on their status (hidden or not).
        3 - The user was killed, the information following is the reason
	    for being killed.
	4 - The user changed their nickname. The information will be the
	    user's new nickname. If the user was set invisible (user mode 
	    +i) when the nick change occured, the new nickname will not be
	    available unless the person calling the whowas is a helper
            or an IRC operator.
      eg. Mode = 1, the information could be something like "Read
          error: No route to host" etc)


671 - RPL_WHOISSECURE
      <nick> <type> [:is connected via a secure connection]


678 - RPL_LUSERSTAFF
      <number of staff online> :staff(s) online
      
      This is complimentary of RPL_LUSEROP, however this is to count the
      number of network staff currently on the network. This could be of
      benefit to other networks such as dalnet as well since AFAIK they also
      have users which have administrative roles but are not operators. On
      some networks this means people who help maintain the network 
      channel/nickname services and help users. This is encouraged to be used!


679 - RPL_TIMEONSERVERIS
      <seconds> [<microseconds> | '*'] <timezone> <flags> :time according to server
      
      This is the time on the server, used to allow clients to receive a more
      precise time from the server and is sent upon client connection. This
      allows clients to calculate how long an object has been around for since
      all times are send corresponding to the time on the server, such as
      when a topic was set, or if the client uses WATCH how long a user has
      been online for. Clients may also use this to be able to synchronise
      themselves with the server more accurately (since the /TIME command
      cannot be relied on), and allow for the user's perspective of the time
      to be altered to reflect the user's actual timezone.
      Seconds are the number of seconds since Jan 1, 00:00 UTC, 1970. 
      Microseconds are obviously the number of microseconds past the second.
      Remember that this is in microseconds and not milliseconds! If you want
      milliseconds (ala old 'C' ftime()) you will need to do a small division
      calculation. This can be safely ignored anyway, it is just here for
      completeness :) Insane client writers could use it to sync a clock
      'accurately' to an IRC server, as long as network lag was calculated,
      but it was not intended to be a replacement for nettime/ntp.
      The timezone is in the format of [+/-]HHMM, east of GMT. This follows
      similar formats found in other internet protocols (SMTP for example)
      and is also easy to read, and parse a-like. For example, GMT would be
      either +0000 or -0000, Melbourne Australia would be +1000, US Eastern
      Time would be -0500, Kathmandu would be +0545 etc etc.
      The flags are a line of characters to make it easier to parse and
      scaleability issues. The characters should be considered case sensitive.
      Currently the following are defined:
       'd' - Day-light-saving time
       'e' - Time may not match real time in zone (a bad clock or zone setting)
      eg. "db" means it is day-light-saving time, but the given time
      may not be an accurate representation of the real time in this timezone.
      Note: if no flags are set, a '*' will be put in the flag spot instead.


680 - RPL_HELP
      [<command> | '*'] :<parameter string>
      
      This is a reply to a help request. The parameter string is a string
      giving help to the command specified. Terminated with 666.


681 - RPL_MOREHELP
      [<command> | '*'] :<string>
      
      This is an addition to RPL_HELP, if requested, and builds on any
      information given above, usually in the form of an explanation of the
      command. Terminated with 666.



687 - RPL_YOURLANGUAGEIS
      (See 'LANGUAGE' file)


688 - RPL_LANGUAGE
      (See 'LANGUAGE' file)


689 - RPL_ENDOFLANGUAGES
      (See 'LANGUAGE' file)


690 - RPL_WHOIS_LANGUAGE
      (See 'LANGUAGE' file)


973 - ERR_CANNOTCHANGEUMODE	
      <mode char> :Cannot toggle this user mode [<reason>]
      
      Cannot change a specific user mode. May also include a reason why


974 - ERR_CANNOTCHANGECHANMODE	
      <mode char> :Cannot modify this channel mode [<reason>]
      
      Same as above (ERR_CHANNOTCHANGEUMODE) except for channel modes


975 - ERR_CANNOTCHANGESERVERMODE
      <mode char> :Cannot modify this server mode [<reason>]
      
      Same as above (ERR_CHANNOTCHANGEUMODE) except for server modes


976 - ERR_CANNOTSENDTONICK
      <nickname> :Cannot send to this nickname
      
      This means the message is being sent to a user who has +R set and the
      sender has not been identified with the network services yet (hasn't
      got a +I on their user modes)


977 - ERR_UNKNOWNSERVERMODE
      <modechar> :Unknown server mode
      
      Extension to ERR_UNKNOWNMODE, same deal except for server modes :)


979 - ERR_SERVERMODELOCK
      <target> :Cannot change server modes (+L)
      
      This is returned when the given server cannot accept mode changes by
      any object except its own configuration file or other servers due to
      server mode +L (mode-lock) being set.


981 - ERR_NOMORELANGS
      <max languages> :No more languages can be set
      
      Tell the client it cannot set any more languages, the maximum given.
      
      
982 - ERR_NOLANGUAGE
      <language code> :is an unknown language to me
      
      Report to the client that the language given was unknown and will not
      be used, or shown in the WHOIS output.


Extensions:
004 - RPL_MYINFO
      <server hostname> <server version> <user modes> <channel modes>
       <channel modes with parameters> <user modes with parameters>
       <server modes> <server modes with parameters>

      ircu started adding 'channel modes with parameters' to the string, this
      has been further extended to contain the server modes (a kineircd
      addition) and user modes with parameters since the '+s' user mode in
      ircu and in kineircd takes a parameter.
      If any field needs to be blank, it can be replaced with a '*'. This may
      be needed on servers that do not have user modes with parameters, or
      server modes/server modes with parameters. The out-of-order sequence
      of the strings are simply due to the way this mode has evolved.


xxx - RPL_MAP
      <sUID> <pmajor> <#hops> <#users> <netload> * * * * <modes>
       :<map drawing> <server name>
      
      Note that all fields are as the replying server sees them at the time
      of calling, therefore they may change constantly.
      'sUID' is the server's unique identification number (used in newer
      protocols) as seen network-wide.
      'pmajor' is the major protocol number of the connection. Note that this
      may be different via another link depending on the network topology.
      '#hops' is the number of hops in the current routing table.
      '#users' are the number of users currently on the server.
      'netload' is a percentage (0..100) how many users are on this server
      compared with the entire network (eg. 25 means the server is holding
      1/4 of the current users network-wide). Note this is a floating point
      number.
      The '*' fields are for future use.
      'modes' are the modes set (modes without parameters), breif list
      'map drawing' is a number of characters (all US-ASCII) used to "draw"
      the current map of the network, however this only works when the fields
      are aligned properly
      'server name' is always last, and is the name of the server in this map
      entry
